name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '24'

    - name: Setup Clojure
      uses: DeLaGuardo/setup-clojure@12.5
      with:
        cli: 'latest'

    - name: Cache Clojure dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.m2/repository
          ~/.gitlibs
          ~/.deps.clj
        key: clojure-deps-${{ hashFiles('deps.edn') }}
        restore-keys: clojure-deps-

    - name: Install NPM dependencies
      run: npm install

    - name: Build production bundle
      run: npm run release

    - name: Verify build output
      run: |
        echo "Checking build output..."
        ls -la public/
        ls -la public/js/ || true
        echo "main.js size: $(stat -f%z public/js/main.js 2>/dev/null || stat -c%s public/js/main.js)"
        echo "main.css size: $(stat -f%z public/main.css 2>/dev/null || stat -c%s public/main.css)"

    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v5

    - name: Upload artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./public

  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
